<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards for Plugin">
	<description>Sniffs for WordPress plugins</description>

	<rule ref="PHPCompatibilityWP"/>
	<config name="testVersion" value="5.6-"/>

	<rule ref="WordPress-Extra"/>
	<rule ref="WordPress-Docs"/>
	<rule ref="WordPress.WP.I18n"/>
	<config name="text_domain" value="popup-maker,default"/>

	<!-- Show progress and sniff codes in all reports -->
	<arg value="ps"/>

	<arg name="extensions" value="php"/>

	<!-- Exclude these -->
	<exclude-pattern>*/vendor/*</exclude-pattern>
	<exclude-pattern>*/tests/*</exclude-pattern>
	<exclude-pattern>*.js</exclude-pattern>

	<!-- Temporary due to usage of CONSTANT like names for core variables. -->
	<rule ref="WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase">
		<exclude-pattern>*</exclude-pattern>
	</rule>

	<!-- Allow short syntax arrays. -->
	<rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

	<!-- Disallow long array syntax -->
	<rule ref="Generic.Arrays.DisallowShortArraySyntax.Found">
		<exclude-pattern>*</exclude-pattern>
	</rule>

	<!-- Allow PSR file name & class names. -->
	<rule ref="WordPress.Files.FileName.NotHyphenatedLowercase">
		<exclude-pattern>*</exclude-pattern>
	</rule>

	<rule ref="WordPress.Files.FileName.InvalidClassFileName">
		<exclude-pattern>*</exclude-pattern>
	</rule>

	<rule ref="WordPress-Core">
		<exclude name="WordPress.Files.FileName.InvalidClassFileName" />
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
	</rule>

	<rule ref="WordPress">
		<!-- <exclude name="WordPress.Files.FileName" /> -->
		<exclude name="WordPress.Files.FileName.InvalidClassFileName" />
		<exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
		<exclude name="WordPress.NamingConventions.ValidVariableName" />
		<exclude name="WordPress.WP.I18n.NonSingularStringLiteralText" />
		<exclude name="WordPress.PHP.NoSilencedErrors.Discouraged" />
		<exclude name="WordPress.PHP.DisallowShortTernary.Found" />
	</rule>

	<!-- Enforce space before closing parenthesis -->
	<rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing.SpacingBeforeClose">
		<severity>5</severity>
	</rule>

	<!-- Do not require docblocks for unit tests -->
	<!-- <rule ref="Squiz.Commenting.FunctionComment.Missing">
		<exclude-pattern>phpunit/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FileComment.Missing">
		<exclude-pattern>phpunit/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.ClassComment.Missing">
		<exclude-pattern>phpunit/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.ClassComment.SpacingAfter">
		<exclude-pattern>phpunit/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FunctionComment.MissingParamTag">
		<exclude-pattern>phpunit/*</exclude-pattern>
	</rule>
	<rule ref="Generic.Commenting.DocComment.Empty">
		<exclude-pattern>phpunit/*</exclude-pattern>
	</rule>
	<rule ref="Generic.Commenting.DocComment.MissingShort">
		<exclude-pattern>phpunit/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.VariableComment.Missing">
		<exclude-pattern>phpunit/*</exclude-pattern>
	</rule>
	<rule ref="Squiz.Commenting.FunctionCommentThrowTag.Missing">
		<exclude-pattern>phpunit/*</exclude-pattern>
	</rule> -->
</ruleset>
